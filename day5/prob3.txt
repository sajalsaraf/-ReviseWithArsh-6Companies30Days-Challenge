class Solution {
public:
    int dp[3005][1005];
    long long mod = 1e9+7;
    
    
    long long int solve(int start, int end, int k){
    
        if(k == 0 && start == end){
            return 1;
        }
        if(k == 0){
            return 0;
        }
        

        if(dp[start+1000][k] != -1){
            return dp[start+1000][k];
        }
        int n = solve(start-1, end, k-1)%mod; 
        int m = solve(start+1, end, k-1)%mod;
        dp[start+1000][k] = n+m;
        return (n+m)%mod;

    }
    
    int numberOfWays(int start, int end, int k) {
        
        memset(dp, -1, sizeof(dp));
        
        return solve(start, end, k);


    }
};